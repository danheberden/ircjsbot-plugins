/** @module control */

"use strict";

const irc     = require("irc-js");
const shared  = require("./shared");

const STOP    = irc.STATUS.STOP;
const SUCCESS = irc.STATUS.SUCCESS;
const forMe   = shared.forMe;

function load(bot) {
  // Join a channel.
  await msg, chan = bot.matchIf(/\bjoin\s+(\S+)\s*$/i, forMe);
  const from = msg.from.nick;
  if (bot.channels.has(irc.id(chan))) {
    return msg.reply("${from}, I am already in ${chan}.");
  }
  // Reply when joined.
  await chan, err = bot.join(chan);
  if (!err) {
    msg.reply("${from}, I am now in ${chan}.");
    return;
  }
  msg.reply("${from}, there was an error when I tried to join ${name}: ${err.message}");
  resume;

  resume STOP;

  // Leave a channel.
  await msg, chan = bot.matchIf(/\b(?:part|leave)\s+(\S+)\s*$/i, forMe);
  if (!bot.channels.has(irc.id(chan))) {
    msg.reply("${msg.from.nick}, I am not in ${chan}.");
    return STOP;
  }
  bot.part(chan);
  msg.reply("${msg.from.nick}, I have now left ${chan}.");
  resume STOP;

  // Say something.
  await msg, chan, text = bot.matchIf(/\bsay\s+(\S+)\s+(.+)*$/i, forMe);
  const chanObj = bot.channels.get(irc.id(chan));
  if (chanObj) {
    chanObj.say(text);
  }
  else {
    msg.reply("${msg.from.nick}, I am not in ${chan}.");
  }
  resume STOP;

  // Quit.
  await msg, reason = bot.matchIf(/\bquit((?:\s+).+)?\s*$/i, forMe);
  bot.quit(reason ? reason : msg.from.nick + " told me to quit, bye!");
  process.exit();
  resume STOP;

  // Get invited.
  await msg = bot.listen(irc.COMMAND.INVITE);
  // Some clients send chan name as a trailing param :/
  await chan, err = bot.join(msg.params[1].replace(/^:/, ""));
  if (err) {
    return;
  }
  chan.say("Thanks for inviting me, ${msg.from.nick}.");
  resume;

  resume STOP;

  // Take no crap/compliments.
  await msg, you, remark = bot.matchIf(/\b(you['â€™]?re|you\s+are|ur|u)\s+([^?]+)/i, forMe);
  msg.reply("${msg.from.nick}, no ${you.toUpperCase()} ${remark}");
  resume STOP;

  return SUCCESS;
}

function unload(bot) {
  return SUCCESS;
}

exports.name    = "Control";
exports.load    = load;
exports.unload  = unload;
